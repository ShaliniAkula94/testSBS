<Type Name="DbBatchCommandCollection" FullName="Microsoft.Data.Common.DbBatchCommandCollection">
  <TypeSignature Language="C#" Value="public abstract class DbBatchCommandCollection : System.Collections.Generic.ICollection&lt;Microsoft.Data.Common.DbBatchCommand&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.Data.Common.DbBatchCommand&gt;, System.Collections.Generic.IList&lt;Microsoft.Data.Common.DbBatchCommand&gt;" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbBatchCommandCollection&#xA;Implements ICollection(Of DbBatchCommand), IEnumerable(Of DbBatchCommand), IList(Of DbBatchCommand)" />
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.Data.Common.DbBatchCommand&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Data.Common.DbBatchCommand&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;Microsoft.Data.Common.DbBatchCommand&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      The base class for a collection of instances of <see cref="T:Microsoft.Data.Common.DbBatchCommand" />, contained in a <see cref="T:Microsoft.Data.Common.DbBatch" />.
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbBatchCommandCollection ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>
          Initializes a new instance of the <see cref="T:Microsoft.Data.Common.DbBatchCommandCollection" /> class.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract void Add (Microsoft.Data.Common.DbBatchCommand item);" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Add (item As DbBatchCommand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Data.Common.DbBatchCommand" />
      </Parameters>
      <Docs>
        <param name="item">
          The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.
        </param>
        <summary>
          Adds the specified <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object to the <see cref="T:Microsoft.Data.Common.DbBatchCommandCollection" />.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Clear ()" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          Removes all <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> values from the <see cref="T:Microsoft.Data.Common.DbBatchCommandCollection" />.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (Microsoft.Data.Common.DbBatchCommand item);" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (item As DbBatchCommand) As Boolean" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Data.Common.DbBatchCommand" />
      </Parameters>
      <Docs>
        <param name="item">
          The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.
        </param>
        <summary>
          Indicates whether a <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> is contained in the collection.
        </summary>
        <returns>
          <see langword="true" /> if the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> is in the collection; otherwise <see langword="false" />.
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public abstract void CopyTo (Microsoft.Data.Common.DbBatchCommand[] array, int arrayIndex);" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CopyTo (array As DbBatchCommand(), arrayIndex As Integer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Microsoft.Data.Common.DbBatchCommand[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.
        </param>
        <param name="arrayIndex">
          The zero-based index in <paramref name="array" /> at which copying begins.
        </param>
        <summary>
          Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
        </summary>
        <value>
          The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchCommand">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.Data.Common.DbBatchCommand GetBatchCommand (int index);" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetBatchCommand (index As Integer) As DbBatchCommand" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Microsoft.Data.Common.DbBatchCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;Microsoft.Data.Common.DbBatchCommand&gt; GetEnumerator ();" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of DbBatchCommand)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.Data.Common.DbBatchCommand&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          Returns the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object at the specified index in the collection.
        </summary>
        <returns>
          The <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object at the specified index in the collection.
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public abstract int IndexOf (Microsoft.Data.Common.DbBatchCommand item);" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IndexOf (item As DbBatchCommand) As Integer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Data.Common.DbBatchCommand" />
      </Parameters>
      <Docs>
        <param name="item">
          The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.
        </param>
        <summary>
          Returns the index of the specified <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object.
        </summary>
        <returns>
          The index of the specified <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object.
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public abstract void Insert (int index, Microsoft.Data.Common.DbBatchCommand item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class Microsoft.Data.Common.DbBatchCommand item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Data.Common.DbBatchCommandCollection.Insert(System.Int32,Microsoft.Data.Common.DbBatchCommand)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Insert (index As Integer, item As DbBatchCommand)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Microsoft.Data.Common.DbBatchCommand -&gt; unit" Usage="dbBatchCommandCollection.Insert (index, item)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Insert(int index, System::Data::Common::DbBatchCommand ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="Microsoft.Data.Common.DbBatchCommand" />
      </Parameters>
      <Docs>
        <param name="index">
          The index at which to insert the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object.
        </param>
        <param name="item">
          The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.
        </param>
        <summary>
          Inserts the specified index of the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object with the specified name into the collection at the specified index.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies whether the collection is read-only.</summary>
        <value>
          <see langword="true" /> if the collection is read-only; otherwise <see langword="false" />.
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Data.Common.DbBatchCommand this[int index] { get; set; }" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As DbBatchCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>Microsoft.Data.Common.DbBatchCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          The zero-based index of the <see cref="T:Microsoft.Data.Common.DbBatchCommand" />.
        </param>
        <summary>
          Gets or sets the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> at the specified index.
        </summary>
        <value>
          The <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> at the specified index.
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">The specified index does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (Microsoft.Data.Common.DbBatchCommand item);" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (item As DbBatchCommand) As Boolean" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Data.Common.DbBatchCommand" />
      </Parameters>
      <Docs>
        <param name="item">
          The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.
        </param>
        <summary>
          Removes the specified <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object from the collection.
        </summary>
        <returns>
          <see langword="true" /> if <paramref name="item" /> was successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the <see cref="T:Microsoft.Data.Common.DbBatchCommandCollection" />.
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          The index where the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object is located.
        </param>
        <summary>
          Removes the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object at the specified from the collection.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBatchCommand">
      <MemberSignature Language="C#" Value="protected abstract void SetBatchCommand (int index, Microsoft.Data.Common.DbBatchCommand batchCommand);" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetBatchCommand (index As Integer, batchCommand As DbBatchCommand)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="batchCommand" Type="Microsoft.Data.Common.DbBatchCommand" />
      </Parameters>
      <Docs>
        <param name="index">
          The index where the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object is located.
        </param>
        <param name="batchCommand">To be added.</param>
        <summary>
          Sets the <see cref="T:Microsoft.Data.Common.DbBatchCommand" /> object at the specified index to a new value.
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>
          An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
        </returns>
        <remarks>
          <format type="text/markdown">
            <![CDATA[

## Remarks

This member is an explicit interface member implementation. It can be used only when the <xref:Microsoft.Data.Common.DbBatchCommandCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.

          ]]>
          </format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
