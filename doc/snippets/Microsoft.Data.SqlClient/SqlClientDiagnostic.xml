<?xml version="1.0"?>
<docs>
  <members name="SqlClientDiagnostic">
    <SqlClientDiagnostic>
      <summary>The abstract base class for diagnostic events containing common fields shared by all diagnostic events.</summary>
    </SqlClientDiagnostic>
    <ctor>
      <param name="operationId">A guid value used to correlate before, after and error events.</param>
      <param name="operation">The name of the operation.</param>
      <param name="timestamp">The timestamp of the event.</param>
      <summary>
        Initializes a new instance of the <see cref="T:Microsoft.Data.SqlClient.SqlRetryingEventArgs" /> class.
      </summary>
    </ctor>
    <OperationId>
      <summary>A guid value used to correlate before, after and error events.</summary>
    </OperationId>
    <Operation>
      <summary>The name of the operation.</summary>
    </Operation>
    <Timestamp>
      <summary>The timestamp of the event.</summary>
    </Timestamp>
    <CommonPropertyCount>
      <summary>Provides the count of common properties for classes which derive from this class.</summary>
    </CommonPropertyCount>
    <TryGetCommonProperty>
      <summary>Provides derived classed with a method to attempt to fetch common properties from the this base class. Returns true if the property is found false otherwise.</summary>
    </TryGetCommonProperty>
    <GetDerivedCount>
      <summary>Provides the base class with the count of additional properties added by derived classes. This is used to produce the Count value.</summary>
    </GetDerivedCount>
    <GetDerivedProperty>
      <summary>Provides the base class with the the ability to query for properties added by derived classes. This is used to provide values to the indexer.</summary>
    </GetDerivedProperty>
  </members>
  <members name="SqlClientCommandBefore">
    <SqlClientCommandBefore>
      <summary>Contains diagnostic information emitted before a command is executed.</summary>
    </SqlClientCommandBefore>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <ConnectionId>
      <summary>A nullable guid uniquely identifying the connection that the xommand is being executed on.</summary>
    </ConnectionId>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction that the command enrolled in if it is enrolled in one.</summary>
    </TransactionId>
    <Command>
      <summary>The command object that is executing.</summary>
    </Command>
  </members>
  <members name="SqlClientCommandAfter">
    <SqlClientCommandAfter>
      <summary>Contains diagnostic information emitted after a command is successfully executed.</summary>
    </SqlClientCommandAfter>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <ConnectionId>
      <summary>A nullable guid uniquely identifying the connection that the command is being executed on.</summary>
    </ConnectionId>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction that the command is enrolled in if it is enrolled in one, or null.</summary>
    </TransactionId>
    <Command>
      <summary>The command object that is executing.</summary>
    </Command>
    <Statistics>
      <summary>An IDictionary of statistic information about the event that has completed.</summary>
    </Statistics>
  </members>
  <members name="SqlClientCommandError">
    <SqlClientCommandError>
      <summary>Contains diagnostic information emitted after a command execution fails with an exception.</summary>
    </SqlClientCommandError>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <ConnectionId>
      <summary>A nullable guid uniquely identifying the connection that the command is being executed on.</summary>
    </ConnectionId>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction that the command is enrolled in if it is enrolled in one, or null.</summary>
    </TransactionId>
    <Command>
      <summary>The command object that is executing.</summary>
    </Command>
    <Exception>
      <summary>The exception object that caused the command execution to fail.</summary>
    </Exception>
  </members>
  <members name="SqlClientConnectionOpenBefore">
    <SqlClientConnectionOpenBefore>
      <summary>Contains diagnostic information emitted before a connection is opened.</summary>
    </SqlClientConnectionOpenBefore>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that is being opened.</summary>
    </Connection>
    <ClientVersion>
      <summary>The version of the SqlClient library.</summary>
    </ClientVersion>
  </members>
  <members name="SqlClientConnectionOpenAfter">
    <SqlClientConnectionOpenAfter>
      <summary>Contains diagnostic information emitted after a connection has been successfully opened.</summary>
    </SqlClientConnectionOpenAfter>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that has been opened.</summary>
    </Connection>
    <ClientVersion>
      <summary>The version of the SqlClient library.</summary>
    </ClientVersion>
    <ConnectionId>
      <summary>The unique guid assigned to the connection.</summary>
    </ConnectionId>
    <Statistics>
      <summary>An IDictionary of statistic information about the event that has completed.</summary>
    </Statistics>
  </members>
  <members name="SqlClientConnectionOpenError">
    <SqlClientConnectionOpenError>
      <summary>Contains diagnostic information emitted after a connection open fails with an exception.</summary>
    </SqlClientConnectionOpenError>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that has been opened.</summary>
    </Connection>
    <ClientVersion>
      <summary>The version of the SqlClient library.</summary>
    </ClientVersion>
    <ConnectionId>
      <summary>The unique guid assigned to the connection.</summary>
    </ConnectionId>
    <Exception>
      <summary>The exception object that caused the command execution to fail.</summary>
    </Exception>
  </members>
  <members name="SqlClientConnectionCloseBefore">
    <SqlClientConnectionCloseBefore>
      <summary>Contains diagnostic information emitted before a connection is closed.</summary>
    </SqlClientConnectionCloseBefore>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that is being closed.</summary>
    </Connection>
    <ConnectionId>
      <summary>The unique guid assigned to the connection.</summary>
    </ConnectionId>
    <Statistics>
      <summary>An IDictionary of statistic information about the connection.</summary>
    </Statistics>
  </members>
  <members name="SqlClientConnectionCloseAfter">
    <SqlClientConnectionCloseAfter>
      <summary>Contains diagnostic information emitted after a connection has been successfully closed.</summary>
    </SqlClientConnectionCloseAfter>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that has been closed.</summary>
    </Connection>
    <ConnectionId>
      <summary>The unique guid assigned to the connection.</summary>
    </ConnectionId>
    <Statistics>
      <summary>An IDictionary of statistic information about the connection.</summary>
    </Statistics>
  </members>
  <members name="SqlClientConnectionCloseError">
    <SqlClientConnectionCloseError>
      <summary>Contains diagnostic information emitted after a connection close fails with an exception.</summary>
    </SqlClientConnectionCloseError>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that has been closed.</summary>
    </Connection>
    <ConnectionId>
      <summary>The unique guid assigned to the connection.</summary>
    </ConnectionId>
    <Statistics>
      <summary>An IDictionary of statistic information about the connection.</summary>
    </Statistics>
    <Exception>
      <summary>The exception object that caused the command execution to fail.</summary>
    </Exception>
  </members>
  <members name="SqlClientTransactionCommitBefore">
    <SqlClientTransactionCommitBefore>
      <summary>Contains diagnostic information emitted before a transaction is opened.</summary>
    </SqlClientTransactionCommitBefore>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that the transaction belongs to.</summary>
    </Connection>
    <IsolationLevel>
      <summary>The IsolationLevel of the transaction.</summary>
    </IsolationLevel>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction that the command is enrolled in if it is enrolled in one, or null.</summary>
    </TransactionId>
  </members>
  <members name="SqlClientTransactionCommitAfter">
    <SqlClientTransactionCommitAfter>
      <summary>Contains diagnostic information emitted after a transaction is successfully committed.</summary>
    </SqlClientTransactionCommitAfter>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that the transaction belongs to.</summary>
    </Connection>
    <IsolationLevel>
      <summary>The IsolationLevel of the transaction.</summary>
    </IsolationLevel>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction that the command is enrolled in if it is enrolled in one, or null.</summary>
    </TransactionId>
  </members>
  <members name="SqlClientTransactionCommitError">
    <SqlClientTransactionCommitError>
      <summary>Contains diagnostic information emitted after a transaction commit fails with an exception.</summary>
    </SqlClientTransactionCommitError>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that the transaction belongs to.</summary>
    </Connection>
    <IsolationLevel>
      <summary>The IsolationLevel of the transaction.</summary>
    </IsolationLevel>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction that the command is enrolled in if it is enrolled in one, or null.</summary>
    </TransactionId>
    <Exception>
      <summary>The exception object that caused the command execution to fail.</summary>
    </Exception>
  </members>
  <members name="SqlClientTransactionRollbackBefore">
    <SqlClientTransactionRollbackBefore>
      <summary>Contains diagnostic information emitted before a transaction rollback is rolled back.</summary>
    </SqlClientTransactionRollbackBefore>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that the transaction belongs to.</summary>
    </Connection>
    <IsolationLevel>
      <summary>The IsolationLevel of the transaction.</summary>
    </IsolationLevel>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction that the command is enrolled in if it is enrolled in one, or null.</summary>
    </TransactionId>
    <TransactionName>
      <summary>The name of the transaction which is being rolled back.</summary>
    </TransactionName>
  </members>
  <members name="SqlClientTransactionRollbackAfter">
    <SqlClientTransactionRollbackAfter>
      <summary>Contains diagnostic information emitted after a transaction is rolled back successfully.</summary>
    </SqlClientTransactionRollbackAfter>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that the transaction belongs to.</summary>
    </Connection>
    <IsolationLevel>
      <summary>The IsolationLevel of the transaction.</summary>
    </IsolationLevel>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction, or null.</summary>
    </TransactionId>
    <TransactionName>
      <summary>The name of the transaction which is being rolled back.</summary>
    </TransactionName>
  </members>
  <members name="SqlClientTransactionRollbackError">
    <SqlClientTransactionRollbackError>
      <summary>Contains diagnostic information emitted after a transaction roll back failes with an exception.</summary>
    </SqlClientTransactionRollbackError>
    <Name>
      <summary>The name of the event that that needs to be enabled for the event to be raised.</summary>
    </Name>
    <Connection>
      <summary>The connection object that the transaction belongs to.</summary>
    </Connection>
    <IsolationLevel>
      <summary>The IsolationLevel of the transaction.</summary>
    </IsolationLevel>
    <TransactionId>
      <summary>A nullable long uniquely identifying the transaction , or null.</summary>
    </TransactionId>
    <TransactionName>
      <summary>The name of the transaction which is being rolled back.</summary>
    </TransactionName>
    <Exception>
      <summary>The exception object that caused the command execution to fail.</summary>
    </Exception>
  </members>
</docs>
