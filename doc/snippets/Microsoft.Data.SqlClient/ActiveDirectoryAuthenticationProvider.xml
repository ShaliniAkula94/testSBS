<docs>
  <members name="ActiveDirectoryAuthenticationProvider">
    <ActiveDirectoryAuthenticationProvider>
      <summary>
      This class implements <see cref="T:Microsoft.Data.SqlClient.SqlAuthenticationProvider" /> and is used for active directory federated authentication mechanisms.
      </summary>
    </ActiveDirectoryAuthenticationProvider>
    <ctor>
      <summary>
        Initializes the <see cref="T:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider" /> class.
      </summary>
    </ctor>
    <ctor2>
      <param name="deviceCodeFlowCallbackMethod">The callback method to be used by driver when performing 'Active Directory Device Code Flow' authentication.</param>
      <summary>
        Initializes the <see cref="T:Microsoft.Data.SqlClient.ActiveDirectoryAuthenticationProvider" /> class with provided device code flow callback method.
      </summary>
    </ctor2>
    <AcquireTokenAsync>
      <param name="parameters">The Active Directory authentication parameters passed by the driver to authentication providers.</param>
      <summary>Acquires a security token from the authority.</summary>
      <returns>Represents an asynchronous operation that returns the AD authentication token.</returns>
    </AcquireTokenAsync>
    <SetDeviceCodeFlowCallback>
      <param name="deviceCodeFlowCallbackMethod">The callback method to be used by driver when performing 'Active Directory Device Code Flow' authentication.</param>
      <summary>Set's callback method that overrides driver's default implementation to process result  when performing 'Active Directory Device Code Flow' authentication.</summary>
    </SetDeviceCodeFlowCallback>
    <BeforeLoad>
      <param name="authentication">The authentication method.</param>
      <summary>This method is called immediately before the provider is added to SQL drivers registry. </summary>
      <remarks>Avoid performing long-waiting tasks in this method, since it can block other threads from accessing the provider registry.</remarks>
    </BeforeLoad>
    <BeforeUnload>
      <param name="authentication">The authentication method.</param>
      <summary>This method is called immediately before the provider is removed from the SQL drivers registry. </summary>
      <remarks>For example, this method is called when a different provider with the same authentication method overrides this provider in the SQL drivers registry. Avoid performing long-waiting task in this method, since it can block other threads from accessing the provider registry.</remarks>
    </BeforeUnload>
    <IsSupported>
      <param name="authentication">The authentication method.</param>
      <summary>Indicates whether the specified authentication method is supported.</summary>
      <returns>
        <see langword="true" /> if the specified authentication method is supported; otherwise, <see langword="false" />.
      </returns>
      <remarks>
        <format type="text/markdown">
          <![CDATA[  
  
## Remarks  
 The supported authentication methods are:
  
|Authentication Method|
|----------------|
|<xref:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryPassword%2A>|
|<xref:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryIntegrated%2A>|
|<xref:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryInteractive%2A>|
|<xref:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryServicePrincipal%2A>|
|<xref:Microsoft.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryDeviceCodeFlow%2A>|

## Examples  
 The following example demonstrates providing a custom device flow callback to SqlClient driver for Device Code Flow authentication method:
 
 [!code-csharp[ActiveDirectory_DeviceCodeFlowCallback Example#1](~/../sqlclient/doc/samples/AADAuthenticationCustomDeviceFlowCallback.cs#1)]
  
 ]]>
        </format>
      </remarks>
    </IsSupported>
  </members>
</docs>
