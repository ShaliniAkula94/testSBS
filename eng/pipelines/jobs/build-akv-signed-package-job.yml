#################################################################################
# Licensed to the .NET Foundation under one or more agreements.                 #
# The .NET Foundation licenses this file to you under the MIT license.          #
# See the LICENSE file in the project root for more information.                #
#################################################################################

parameters:
    - name: assemblyFileVersion
      type: string

    - name: buildConfiguration
      type: string

    - name: nugetPackageVersion
      type: string

    - name: mdsPackageVersion
      type: string

    - name: publishSymbols
      type: boolean

    - name: signingAppRegistrationClientId
      type: string

    - name: signingAppRegistrationTenantId
      type: string

    - name: signingAkvName
      type: string

    - name: signingAuthCertName
      type: string

    - name: signingConnectedServiceName
      type: string

    - name: signingSignCertName
      type: string

    - name: symbolsAzureSubscription
      type: string

    - name: symbolsPublishProjectName
      type: string

    - name: symbolsPublishServer
      type: string

    - name: symbolsPublishTokenUri
      type: string

    - name: symbolsUploadAccount
      type: string

jobs:
    - job: buildSignedAkvPackage
      displayName: 'Build Signed AKV Package'
      pool:
          type: windows

      variables:
          ob_outputDirectory: '$(ARTIFACT_PATH)'

      steps:
          - template: ../steps/script-output-environment-variables-step.yml@self

          - script: |
                echo assemblyFileVersion=            ${{ parameters.assemblyFileVersion }}
                echo buildConfiguration=             ${{ parameters.buildConfiguration }}
                echo nugetPackageVersion=            ${{ parameters.nugetPackageVersion }}
                echo mdsPackageVersion=              ${{ parameters.mdsPackageVersion }}
                echo publishSymbols=                 ${{ parameters.publishSymbols }}
                echo signingAppRegistrationClientId= ${{ parameters.signingAppRegistrationClientId }}
                echo signingAppRegistrationTenantId= ${{ parameters.signingAppRegistrationTenantId }}
                echo signingAkvName=                 ${{ parameters.signingAkvName }}
                echo signingAuthCertName=            ${{ parameters.signingAuthCertName }}
                echo signingConnectedServiceName=    ${{ parameters.signingConnectedServiceName }}
                echo signingSignCertName=            ${{ parameters.signingSignCertName }}
                echo symbolsAzureSubscription=       ${{ parameters.symbolsAzureSubscription }}
                echo symbolsPublishProjectName=      ${{ parameters.symbolsPublishProjectName }}
                echo symbolsPublishServer=           ${{ parameters.symbolsPublishServer }}
                echo symbolsPublishTokenUri=         ${{ parameters.symbolsPublishTokenUri }}
                echo symbolsUploadAccount=           ${{ parameters.symbolsUploadAccount }}
            displayName: 'Output Job Parameters'

          - template: ../steps/compound-build-akv-step.yml@self
            parameters:
                assemblyFileVersion: '${{ parameters.assemblyFileVersion }}'
                buildConfiguration: '${{ parameters.buildConfiguration }}'
                mdsPackageVersion: '${{ parameters.mdsPackageVersion }}'

          - script: tree $(ARTIFACT_PATH)
            displayName: 'Output Build Output'

          - template: ../steps/roslyn-analyzers-akv-step.yml@self
            parameters:
                buildConfiguration: '${{ parameters.buildConfiguration }}'
                mdsPackageVersion: '${{ parameters.mdsPackageVersion }}'

          - template: ../steps/compound-esrp-code-signing-step.yml@self
            parameters:
                akvName: '${{ parameters.signingAkvName }}'
                appRegistrationClientId: '${{ parameters.signingAppRegistrationClientId }}'
                appRegistrationTenantId: '${{ parameters.signingAppRegistrationTenantId }}'
                artifactType: 'dll'
                authCertName: '${{ parameters.signingAuthCertName }}'
                connectedServiceName: '${{ parameters.signingConnectedServiceName }}'
                signingCertName: '${{ parameters.signingSignCertName }}'

          - template: ../steps/compound-nuget-pack-step.yml@self
            parameters:
                buildConfiguration: '${{ parameters.buildConfiguration }}'
                generateSymbolsPackage: true    # Always generate symbols, even if they are not published
                packageVersion: '${{ parameters.nugetPackageVersion }}'
                nuspecPath: '$(REPO_ROOT)/tools/specs/add-ons/$(PACKAGE_NAME).nuspec'
                outputDirectory: '$(ARTIFACT_PATH)'
                referenceType: 'package'

          - template: ../steps/compound-esrp-code-signing-step.yml@self
            parameters:
                akvName: '${{ parameters.signingAkvName }}'
                appRegistrationClientId: '${{ parameters.signingAppRegistrationClientId }}'
                appRegistrationTenantId: '${{ parameters.signingAppRegistrationTenantId }}'
                artifactType: 'pkg'
                authCertName: '${{ parameters.signingAuthCertName }}'
                connectedServiceName: '${{ parameters.signingConnectedServiceName }}'
                signingCertName: '${{ parameters.signingSignCertName }}'

          - ${{ if parameters.publishSymbols }}:
            - template: ../steps/compound-publish-akv-symbols-step.yml@self
              parameters:
                  artifactName: 'akv_symbols_$(System.TeamProject)_$(Build.Repository.Name)_$(Build.SourceBranchName)_${{ parameters.nugetPackageVersion }}_$(System.TimelineId)'
                  azureSubscription: '${{ parameters.symbolsAzureSubscription }}'
                  publishProjectName: '${{ parameters.symbolsPublishProjectName }}'
                  publishServer: '${{ parameters.symbolsPublishServer }}'
                  publishToInternal: true
                  publishToPublic: true
                  publishTokenUri: '${{ parameters.symbolsPublishTokenUri }}'
                  referenceType: 'package'
                  searchPattern: |
                      Windows_NT/${{ parameters.buildConfiguration }}.AnyCPU/AzureKeyVaultProvider/**/$(PACKAGE_NAME).pdb
                      AnyOS/${{ parameters.buildConfiguration }}.AnyCPU/AzureKeyVaultProvider/**/$(PACKAGE_NAME).pdb
                  uploadAccount: '${{ parameters.symbolsUploadAccount }}'
                  version: '${{ parameters.nugetPackageVersion }}'
